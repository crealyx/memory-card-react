{"version":3,"sources":["assets/characters.js","components/Card.js","components/Main.js","assets/img/logo.png","components/Header.js","App.js","index.js"],"names":["charactersArray","id","clicked","name","image","Card","props","className","src","imgSrc","alt","onClick","Main","mainProps","useState","selectedChars","setSelectedChars","clickHandler","cardProps","includes","score","prevScore","prev","characterDisplayArray","arr","i","length","j","Math","floor","random","temp","shuffleArray","map","character","Header","logo","scoreDisplay","App","setScore","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNA2DeA,EA3DS,CACtB,CACEC,GAAI,EACJC,SAAS,EACTC,KAAM,gBACNC,MACE,gHAEJ,CACEH,GAAI,EACJC,SAAS,EACTC,KAAM,cACNC,MACE,8GAEJ,CACEH,GAAI,EACJC,SAAS,EACTC,KAAM,mBACNC,MACE,6HAEJ,CACEH,GAAI,EACJC,SAAS,EACTC,KAAM,iBACNC,MACE,iHAEJ,CACEH,GAAI,EACJC,SAAS,EACTC,KAAM,iBACNC,MACE,iHAEJ,CACEH,GAAI,EACJC,SAAS,EACTC,KAAM,cACNC,MACE,8GAEJ,CACEH,GAAI,EACJC,SAAS,EACTC,KAAM,YACNC,MACE,iHAEJ,CACEH,GAAI,EACJC,SAAS,EACTC,KAAM,kBACNC,MACE,mH,OCxCSC,EAfF,SAACC,GACZ,OACE,sBAAKC,UAAU,OAAf,UACE,qBACEC,IAAKF,EAAMG,OACXC,IAAKJ,EAAMH,KACXQ,QAAS,WACPL,EAAMK,QAAQL,MAGlB,4BAAIA,EAAMH,WCIhB,IA0BeS,EA1BF,SAACC,GACZ,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAAe,SAACC,GAChBH,EAAcI,SAASD,EAAUf,OACnCU,EAAUO,MAAM,GAChBJ,EAAiB,MAEjBH,EAAUO,OAAM,SAACC,GAAD,OAAeA,EAAY,KAC3CL,GAAiB,SAACM,GAAD,4BAAcA,GAAd,CAAoBJ,EAAUf,YAM7CoB,EAxBR,SAAsBC,GACpB,IAAK,IAAIC,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAIC,GACjBD,EAAIC,GAAKD,EAAIG,GACbH,EAAIG,GAAKI,EAEX,OAAOP,EAeyBQ,CAAahC,GAESiC,KAAI,SAACC,GAAD,OACxD,cAAC,EAAD,CAEEjC,GAAIiC,EAAUjC,GACdQ,OAAQyB,EAAU9B,MAClBD,KAAM+B,EAAU/B,KAChBQ,QAASM,GAJJiB,EAAUjC,OAOnB,OAAO,+BAAOsB,KCrCD,MAA0B,iCCY1BY,EAVA,SAAC7B,GACd,OACE,mCACE,qBAAKC,UAAU,WAAWC,IAAK4B,EAAM1B,IAAI,aACzC,4CACA,0CAAaJ,EAAM+B,oBCUVC,MAbf,WACE,MAA0BxB,mBAAS,GAAnC,mBAAOM,EAAP,KAAcmB,EAAd,KAIA,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,CAAQH,aAAcjB,IACtB,cAAC,EAAD,CAAMA,MANW,SAACA,GACpBmB,EAASnB,UCHbqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.72f5273e.chunk.js","sourcesContent":["const charactersArray = [\r\n  {\r\n    id: 1,\r\n    clicked: false,\r\n    name: 'Floch Forster',\r\n    image:\r\n      'https://static.wikia.nocookie.net/shingekinokyojin/images/3/3b/Floch_Forster_%28Anime%29_character_image.png',\r\n  },\r\n  {\r\n    id: 2,\r\n    clicked: false,\r\n    name: 'Eren Jaeger',\r\n    image:\r\n      'https://static.wikia.nocookie.net/shingekinokyojin/images/a/a1/Eren_Jaeger_%28Anime%29_character_image.png',\r\n  },\r\n  {\r\n    id: 3,\r\n    clicked: false,\r\n    name: 'Mikasa Ackermann',\r\n    image:\r\n      'https://static.wikia.nocookie.net/shingekinokyojin/images/3/36/Mikasa_Ackermann_%28Anime%29_character_image_%28850%29.png',\r\n  },\r\n  {\r\n    id: 4,\r\n    clicked: false,\r\n    name: 'Historia Reiss',\r\n    image:\r\n      'https://static.wikia.nocookie.net/shingekinokyojin/images/6/65/Historia_Reiss_%28Anime%29_character_image.png',\r\n  },\r\n  {\r\n    id: 5,\r\n    clicked: false,\r\n    name: 'Levi Ackermann',\r\n    image:\r\n      'https://static.wikia.nocookie.net/shingekinokyojin/images/b/b1/Levi_Ackermann_%28Anime%29_character_image.png',\r\n  },\r\n  {\r\n    id: 6,\r\n    clicked: false,\r\n    name: 'Zeke Jaeger',\r\n    image:\r\n      'https://static.wikia.nocookie.net/shingekinokyojin/images/4/40/Zeke_Jaeger_%28Anime%29_character_image.png',\r\n  },\r\n  {\r\n    id: 7,\r\n    clicked: false,\r\n    name: 'Hange Zoe',\r\n    image:\r\n      'https://static.wikia.nocookie.net/shingekinokyojin/images/e/e4/Hange_Zo%C3%AB_%28Anime%29_character_image.png',\r\n  },\r\n  {\r\n    id: 8,\r\n    clicked: false,\r\n    name: 'Jean Kirschtein',\r\n    image:\r\n      'https://static.wikia.nocookie.net/shingekinokyojin/images/3/38/Jean_Kirschtein_%28Anime%29_character_image.png',\r\n  },\r\n];\r\n\r\nexport default charactersArray;\r\n","const Card = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img\r\n        src={props.imgSrc}\r\n        alt={props.name}\r\n        onClick={() => {\r\n          props.onClick(props);\r\n        }}\r\n      />\r\n      <p>{props.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useState } from 'react';\r\nimport charactersArray from '../assets/characters';\r\nimport Card from './Card';\r\n\r\nfunction shuffleArray(arr) {\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n  }\r\n  return arr;\r\n}\r\n\r\nconst Main = (mainProps) => {\r\n  const [selectedChars, setSelectedChars] = useState([]);\r\n  const clickHandler = (cardProps) => {\r\n    if (selectedChars.includes(cardProps.name)) {\r\n      mainProps.score(0);\r\n      setSelectedChars([]);\r\n    } else {\r\n      mainProps.score((prevScore) => prevScore + 1);\r\n      setSelectedChars((prev) => [...prev, cardProps.name]);\r\n    }\r\n  };\r\n\r\n  const shuffledCharactersArray = shuffleArray(charactersArray);\r\n\r\n  const characterDisplayArray = shuffledCharactersArray.map((character) => (\r\n    <Card\r\n      key={character.id}\r\n      id={character.id}\r\n      imgSrc={character.image}\r\n      name={character.name}\r\n      onClick={clickHandler}\r\n    ></Card>\r\n  ));\r\n  return <main>{characterDisplayArray}</main>;\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/logo.b912c742.png\";","import logo from '../assets/img/logo.png';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <img className=\"aot-logo\" src={logo} alt=\"aot-logo\" />\r\n      <p>MEMORY GAME</p>\r\n      <span>SCORE:{props.scoreDisplay}</span>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Main from './components/Main';\nimport Header from './components/Header';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const scoreHandler = (score) => {\n    setScore(score);\n  };\n  return (\n    <React.Fragment>\n      <Header scoreDisplay={score}></Header>\n      <Main score={scoreHandler}></Main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}